% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/reddit_functions.R
\name{get_user_comments}
\alias{get_user_comments}
\title{Get comments from a specified user}
\usage{
get_user_comments(
  user,
  accesstoken,
  sort = c("new", "hot", "controversial", "top"),
  time = c("all", "hour", "day", "week", "month", "year"),
  limit = 100,
  after = NULL,
  before = NULL,
  output = c("df", "json", "all"),
  verbose = FALSE,
  retry = FALSE
)
}
\arguments{
\item{user}{The username of the user for which comments are requested.}

\item{accesstoken}{The accesstoken required to access the endpoint. Scope
must be \code{"history"}.}

\item{sort}{The order in which the submissions of the user should be ordered
when accessing them. Possible values are:
\itemize{
  \item \code{new}: Returns newest comments
  \item \code{hot}: Returns highly upvoted comments currently
  \item \code{controversial}: Returns comments that received a lot of upvotes
  and downvotes
  \item \code{top}: Returns most upvoted comments in a certain timeframe.
  Timeframe can be specified with \code{time}.
}}

\item{time}{The timeframe for the \code{sort} order \code{controversial} and
\code{top}. Possible values are:
\itemize{
  \item \code{hour}
  \item \code{day}
  \item \code{week}
  \item \code{month}
  \item \code{year}
  \item \code{all} for comments from all time. The default value if 
  time is not specified.
}}

\item{limit}{The maximum number of user comments to return. Must be a number
between 1 and 100.}

\item{after}{The fullname of a comment serving as anchor in the request.
Comments after this comment in the listing are returned.}

\item{before}{The fullname of a comment serving as anchor in the request.
Comments before this comment in the listing are returned.}

\item{output}{What the function should return. Choose \code{json} for an 
unparsed json object, \code{df} for a parsed object in form of a dataframe, 
and \code{all} for a list containg the json object, a dataframe, and the 
before and after anchors (if those exist for the endpoint).}

\item{verbose}{A logical flag whether information about the data extraction
should be printed to the console.}

\item{retry}{A logical flag whether a failed api request should be retried.
Requests will be tried up to three times with varying time intervals between
requests.}
}
\value{
Comments for the specified user as a dataframe, json  object or a 
list containing both.
}
\description{
This returns comments made by one user. Comments can be requested for a
specific timeframe or sort order.
}
\details{
More info at \url{https://www.reddit.com/dev/api/}
}
\examples{
\dontrun{
history_token <- get_token(scope = "history",
                           useragent = my_useragent,
                           username = my_username,
                           password = my_password,
                           client_id = my_client_id,
                           client_secret = my_client_secret)

#Get 10 comments made by Keanu Reeves
keanu_comments <- get_user_comments(user = "_KeanuReeves",
                                    accesstoken = history_token,
                                    sort = "top", time = "all",
                                    limit = 10)
}
}
\seealso{
\code{\link{get_user}}
}
