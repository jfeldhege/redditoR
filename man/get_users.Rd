% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/reddit_functions.R
\name{get_users}
\alias{get_users}
\title{Get user accounts}
\usage{
get_users(
  type = c("popular", "new"),
  accesstoken,
  limit = 100,
  after = NULL,
  before = NULL,
  output = c("df", "json", "all"),
  verbose = FALSE,
  retry = FALSE
)
}
\arguments{
\item{type}{The type of users that is requested. Possible values are:
\itemize{
  \item \code{popular} User accounts that are popular right now
  \item \code{new} Newly created user accounts
  }}

\item{accesstoken}{The accesstoken required to access the endpoint. Scope
must be \code{"read"}.}

\item{limit}{The maximum number of users to return. Must be a number
between 1 and 100.}

\item{after}{The fullname of an item serving as anchor in the request.
Items after this item in the listing are returned.}

\item{before}{The fullname of an item serving as anchor in the
request. Items before this item in the listing are returned.}

\item{output}{What the function should return. Choose \code{json} for an 
unparsed json object, \code{df} for a parsed object in form of a dataframe, 
and \code{all} for a list containg the json object, a dataframe, and the 
before and after anchors (if those exist for the endpoint).}

\item{verbose}{A logical flag whether information about the data extraction
should be printed to the console.}

\item{retry}{A logical flag whether a failed api request should be retried.
Requests will be tried up to three times with varying time intervals between
requests.}
}
\value{
New or popular users as a dataframe, json object or a list 
containing both.
}
\description{
Searches for popular or new users and returns them as a dataframe.
}
\details{
More info at \url{https://www.reddit.com/dev/api/}
}
\examples{
\dontrun{
read_token <- get_token(scope = "read",
                        useragent = my_useragent,
                        username = my_username,
                        password = my_password,
                        client_id = my_client_id,
                        client_secret = my_client_secret)
                        
#Find popular users
popular_users <- get_users(type = "popular",
                           accesstoken = read_token,
                           limit = 10)
#Find new user accounts
new_users <- get_users(type = "new",
                      accesstoken = read_token,
                      limit = 100)
}
}
