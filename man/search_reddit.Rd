% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/reddit_functions.R
\name{search_reddit}
\alias{search_reddit}
\title{Search for items based on a query}
\usage{
search_reddit(
  query,
  accesstoken,
  subreddit = NULL,
  sort = "new",
  limit = 100,
  time = NULL,
  type = c("link", "user", "sr"),
  after = NULL,
  before = NULL,
  output = c("df", "json", "all"),
  verbose = FALSE,
  retry = FALSE
)
}
\arguments{
\item{query}{The search query. Maximum length of the query is 512 characters.}

\item{accesstoken}{The accesstoken required to access the endpoint. Scope
must be \code{"read"}.}

\item{subreddit}{The name of the subreddit in which the search should be
conducted. If it is NULL, the search will be conducted in all subreddits.}

\item{sort}{The order in which the search results should be ordered
when accessing them. Possible values are:
\itemize{
  \item \code{new}: Sorts search results by the time when they were created
  \item \code{hot}: Sorts search results currently trending
  \item \code{relevance}:
  \item \code{comments}:
  \item \code{top}: Most upvoted search results in a certain timeframe.
  Timeframe can be specified with \code{time}.
}}

\item{limit}{The maximum number of search results to return. Must be a number
between 1 and 100.}

\item{time}{The timeframe in which the search results were created. Possible
values are:
\itemize{
  \item \code{hour}
  \item \code{day}
  \item \code{week}
  \item \code{month}
  \item \code{year}
  \item \code{all time}
}}

\item{type}{The type of item to return. Must be \code{"link"} for posts, 
\code{"user"} for "users or \code{"sr"} for subreddits. If it is NULL, it 
will return posts.}

\item{after}{The fullname of a search result serving as anchor in the
request. Search results after this post in the listing are returned.}

\item{before}{The fullname of a search result serving as anchor in the
request. Search results before this post in the listing are returned.}

\item{output}{What the function should return. Choose \code{json} for an 
unparsed json object, \code{df} for a parsed object in form of a dataframe, 
and \code{all} for a list containg the json object, a dataframe, and the 
before and after anchors (if those exist for the endpoint).}

\item{verbose}{A logical flag whether information about the data extraction
should be printed to the console.}

\item{retry}{A logical flag whether a failed api request should be retried.
Requests will be tried up to three times with varying time intervals between
requests.}
}
\value{
A dataframe with posts matching the search query.
}
\description{
Searches can be confined to one subreddit or conducted in all of reddit.
}
\details{
A '+' has to be put between multiple search terms in the query.
Information on how to build advanced search queries can be found at
this link: \url{https://www.reddit.com/wiki/search}
}
\examples{
\dontrun{
read_token <- get_token(scope = "read",
                        useragent = my_useragent,
                        username = my_username,
                        password = my_password,
                        client_id = my_client_id,
                        client_secret = my_client_secret)
                        
#Search for posts in a single subreddit
search_results_movies <- search_reddit(subreddit = "movies",
                                accesstoken = read_token,
                                query = "Keanu+Reeves",
                                sort = "relevance",
                                limit = 10,
                                time = "year")

# Search for posts in all of reddit
search_results_reddit <- search_reddit(subreddit = NULL,
                                      accesstoken = read_token,
                                      query = "Keanu+Reeves",
                                      sort = "relevance",
                                      limit = 10)
}
}
