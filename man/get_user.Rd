% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/reddit_functions.R
\name{get_user}
\alias{get_user}
\title{Get posts and comments from a specified user}
\usage{
get_user(
  user,
  accesstoken,
  type = c("overview", "comments", "submitted", "gilded"),
  sort = "new",
  time = NULL,
  limit = 100,
  before = NULL,
  after = NULL,
  output = c("df", "json", "all"),
  verbose = FALSE,
  retry = FALSE
)
}
\arguments{
\item{user}{The username of the user for which posts and comments are
requested.}

\item{accesstoken}{The accesstoken required to access the endpoint. Scope
must be \code{"history"}.}

\item{type}{The type of content that is requested for the user. Possible
valuesare:
\itemize{
  \item \code{overview} Contains posts and comments.
  \item \code{comments} Only comments.
  \item \code{submitted} Only posts.
  \item \code{gilded} Posts and comments that have received awards.
  }}

\item{sort}{The order in which the posts or comments of the user should be
ordered when accessing them. Possible values are:
\itemize{
  \item \code{new}: Returns newest comments or posts
  \item \code{hot}: Returns highly upvoted comments or posts currently
  \item \code{controversial}: Returns comments or posts that received a lot
  of upvotes and downvotes in a certain imeframe.Timeframe can be specified
  with \code{time}.
  \item \code{top}: Returns most upvoted comments posts in a certain
  timeframe.Timeframe can be specified with \code{time}.
}}

\item{time}{The timeframe for the \code{sort} order \code{"controversial"}
and \code{"top"}. Possible values are:
\itemize{
  \item \code{hour}
  \item \code{day}
  \item \code{week}
  \item \code{month}
  \item \code{year}
  \item \code{all} for items from day the user registered their account to
  today.
}}

\item{limit}{The maximum number of items to return. Must be a number between
1 and 100.}

\item{before}{The fullname of an item serving as anchor in the
request. Items before this item in the listing are returned.}

\item{after}{The fullname of an item serving as anchor in the request.
Items after this item in the listing are returned.}

\item{output}{What the function should return. Choose \code{json} for an 
unparsed json object, \code{df} for a parsed object in form of a dataframe, 
and \code{all} for a list containg the json object, a dataframe, and the 
before and after anchors (if those exist for the endpoint).}

\item{verbose}{A logical flag whether information about the data extraction
should be printed to the console.}

\item{retry}{A logical flag whether a failed api request should be retried.
Requests will be tried up to three times with varying time intervals between
requests.}
}
\value{
Posts, comments or both for the specified user as a dataframe, json 
object or a list containing both.
}
\description{
This function returns posts and/or comments made by one user. They can be
requested for a specific timeframe or sort order.
}
\details{
More info at \url{https://www.reddit.com/dev/api/}
}
\examples{
\dontrun{
history_token <- get_token(scope = "history",
                           useragent = my_useragent,
                           username = my_username,
                           password = my_password,
                           client_id = my_client_id,
                           client_secret = my_client_secret)

# overview returns posts and comments
overview <- get_user(user = "_KeanuReeves",
                     type = "overview",
                     accesstoken = history_token,
                     sort = "top", time = "all",
                     limit = 10)

# type = "comments" returns only comments
user_comments <- get_user(user = "_KeanuReeves",
                          type = "comments",
                          accesstoken = history_token,
                          sort = "top", time = "all",
                          limit = 10)

# type = "submitted" returns only posts
user_comments <- get_user(user = "_KeanuReeves",
                          type = "submitted",
                          accesstoken = history_token,
                          sort = "top", time = "all",
                          limit = 10)

#
gilded <- get_user(user = "_KeanuReeves",
                  type = "gilded",
                  accesstoken = history_token,
                  sort = "hot",
                  time = "all",
                  limit = 10)
}
}
\seealso{
\code{\link{get_user_comments}} and \code{\link{get_submissions}}
}
